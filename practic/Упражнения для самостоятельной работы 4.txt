Упражнения для самостоятельной работы

Тема 4. Массивы

1. Написать функцию конкатенации строк (аналог функции strcat).

2. Написать функцию сравнения строк (аналог функции strcmp).

3. Присвоить переменной единицу, если одна строка содержится в конце другой, и ноль в противном случае. 

4. Поменять местами первый отрицательный элемент вещественного массива m1 с последним положительным элементом вещественного массива m2.

5. Изменить знак у всех отрицательных элементов вещественного массива X.

6. Определить, у скольких элементов целочисленного массива X равные соседи(предыдущий и последующий элементы). Записать ответ в переменную n.

7. Написать функцию проверки на равенство строк s1 и s2 при условии, что пробелы не учитываются.

8. Написать аналог функции strstr , которая возвращает указатель на первое вхождение одной строки в другую и нулевой указатель в противном случае. Используя функцию strstr, найти последнее вхождение строки “end” во введенной строке. Распечатать символы, которые следуют за этим вхождением. 

9. Функции передаются 2 Си-строки: char s[], t[].
Все цифры строки s записать в начало строки t, а остальные символы – в конец (в любом порядке). 

10.Дано множество точек на плоскости, заданных координатами (x,y). Написать функцию, возвращающую минимальное расстояние между двумя точками. 

11.Написать функцию обработки вещественной матрицы (50x20). Функция должна находить строку, содержащую наибольшее количество отрицательных элементов и распечатывать все элементы этой строки. Если таких строк несколько, то печатать все такие строки.

12.Написать функцию, осуществляющую умножение двух матриц порядка MxN и NxK.

13.Что будет выведено на печать?
int a[3][3]={{1,2,3},{4,5,6},{7,8,9}};
int *pa[3]={a[0],a[1],a[2]};
int *p=a[0];
main()
{ 
    int i;
    for(i=0;i<3;i++)
    printf(“%d %d %d %d %d\n”,a[i][2-i], *a[i], *(*(a+i)+i), *pa[i],p[i]);
}

14.Что будет выведено на печать?


char *c[]={“ENTER”,”NEW”,”POINT”,”FIRST”};

char **cp[]={c+3,c+2,c+1,c};

char ***cpp=cp;

main()
{ 
    printf(“%s”,**++cpp);
    
printf(“%s”,*--*++cpp+3);

    printf(“ %s”,*cpp[-2]+3);

    printf(“%s\n”,cpp[-1][-1]+1);

}

15.Упорядочить вещественный массив х по неубыванию, используя метод сортировки выбором (найти максимальный элемент массива и переставить его с последним элементом; затем применить этот же метод ко всем элементам, кроме последнего).

16. Упорядочить вещественный массив х по неубыванию, используя метод сортировки обменом ("метод пузырька") (последовательно сравнивать пары соседних элементов: x1 с x2, х2 с х3 и т.д., и если первый элемент пары больше второго, то переставлять их – наибольший элемент окажется в конце массива; затем применить этот же метод ко всем элементам, кроме последнего).

17.Упорядочить вещественный массив х по неубыванию, используя метод сортировки вставками (пусть первые k элементов уже упорядочены по неубыванию; взять (k+1)-ый элемент и разместить его между первыми k, не нарушая порядок).

18.Дан массив, содержащий заданное количество вещественных чисел. Написать функцию, возвращающую максимальное значение этого массива.

19. Даны целочисленные массивы X и Y , содержащие по 20 элементов. Написать функцию, которая возвращает значение u.
      (см. task04-pic01.png)

20.Описать функцию, определяющую, сколько элементов вещественного массива X из n элементов равны числу у.

21.Написать функцию, которой передаются 2 100-элементных целых массива, определяющую, составлены ли эти 2 массива из одних и тех же чисел без учета порядка их следования, но с учетом повторяющихся чисел (функция возвращает 1 в случае положительного ответа).

22.Написать функцию, которая за 1 просмотр циклически сдвигает полученный вещественный массив на 20 позиций влево (функция для работы должна использовать вспомогательный массив).

23.Написать функции, которым в качестве параметра передается массив указателей на строки. Признак конца – нулевой указатель. 
a) Написать функцию, которая распечатывает первые три символа из каждой строки.
b) Написать функцию, которая печатает самую длинную строку.
c) Написать функцию, которая печатает строки, включающие в себя строку “begin”.

24.Распечатать все аргументы командной строки ( без имени вызываемой программы ).

25.Если среди параметров командной строки, есть строки, содержащие “end” более одного раза, то распечатать символы этих строк, находящиеся после второго вхождения “end”.

26.Написать программу, печатающую имена и значения всех переменных окружения.
